<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Security Context: defines shared resources visible to all other web components -->
	<bean id="customAccessDenied" class="org.itbuddy.spring1.security.CustomAccessDeniedHandler"/>
	<bean id="bcrytPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="customUserDetailService" class="org.itbuddy.spring1.security.CustomUserDetailService"/>
	<bean id="customLoginSuccess" class="org.itbuddy.spring1.security.CustomLoginSuccessHandler"/>
		
	<security:http>
	<!-- CustomLoginSuccessHandler를 로그인 성공 처리자로 지정한다. -->
		<security:form-login login-page="/auth/login" authentication-success-handler-ref="customLoginSuccess"/>
	<!-- CustomAccessDeniedHandler를 접근 거부 처리자로 ㅈ정한다. -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
	<!-- 데이터소스를 지정하고 테이블을 이용해서 기존 로그인 정보를 기록 -->
	<!-- 쿠키의 유효시간을 지정한다. -->
	<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	
	<!-- 로그아웃을 하면 자동 로그인에 사용하는 쿸도 삭제해 주도록 한다. -->
	<security:logout logout-url="/auth/logout" invalidate-session="true" delete-cookies="remember-me,JSESSION_ID"/>
	</security:http>
	<security:authentication-manager>
	<!--  customUserDetailService 빈을 인증 제공자에 지정한다.-->
		<security:authentication-provider user-service-ref="customUserDetailService">
		<security:password-encoder ref="bcrytPasswordEncoder"/>			
		</security:authentication-provider>
	</security:authentication-manager>
		


		
</beans>
